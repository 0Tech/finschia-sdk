// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	"github.com/stretchr/testify/mock"

	abcitypes "github.com/tendermint/tendermint/abci/types"

	"github.com/cosmos/cosmos-sdk/types"
)

// Queryable is an autogenerated mock type for the Queryable type
type Queryable struct {
	mock.Mock
}

// Querier provides a mock function with given fields: ctx, path, req
func (_m *Queryable) Querier(ctx types.Context, path []string, req abcitypes.RequestQuery) ([]byte, types.Error) {
	ret := _m.Called(ctx, path, req)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(types.Context, []string, abcitypes.RequestQuery) []byte); ok {
		r0 = rf(ctx, path, req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 types.Error
	if rf, ok := ret.Get(1).(func(types.Context, []string, abcitypes.RequestQuery) types.Error); ok {
		r1 = rf(ctx, path, req)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(types.Error)
		}
	}

	return r0, r1
}
