#!/bin/sh

set -e

project_name=$(echo $1 | tr [:upper:] [:lower:])
[ -n "$project_name" ]

chain_index=$2
[ "$chain_index" -ge 0 ]

daemon=@DAEMON_HOME@/cosmovisor/current/bin/@DAEMON_NAME@

upgrade_name=@FIXTURE_CHAIN_UPGRADE_NAME@

get_height() {
	local info=$(docker exec ${project_name}_chain-$chain_index-region-0-seat_1 $daemon q block 2>/dev/null)
	if [ -n "$info" ]
	then
		echo "$info" | jq -r '.block.header.height' 2>/dev/null
	fi
}

get_containers() {
	docker ps --no-trunc --format '{{json .}}' | jq -r 'select(.Names | test("^'$project_name'_chain-'$chain_index'")) | .Names'
}

create_bundle() {
	case @FIXTURE_DAEMON_VERSION_NEW@ in
		dummy)
			mkdir bundle && cp dummyd bundle/@DAEMON_NAME@
			sh -c "cd bundle && tar -czf ../$upgrade_name.tar.gz *"
			rm -r bundle
		;;
		local)
			cp @DAEMON_BINARY_DIR@/bundle.tar.gz $upgrade_name.tar.gz
		;;
		*)
			# TODO: arch & os
			_version=@FIXTURE_DAEMON_VERSION_NEW@
			_workdir=$(mktemp -dp .)
			curl -Lo $_workdir/bundle.tar.gz @GITHUB_URL@/releases/download/v$_version/@DAEMON_NAME@_${_version}_linux_amd64.tar.gz
			sh -c "cd $_workdir && tar -xzf bundle.tar.gz && cd @DAEMON_NAME@_${_version}_linux_amd64 && tar -czf ../../$upgrade_name.tar.gz @DAEMON_NAME@"
			rm -rf $_workdir
		;;
	esac
}

upload_bundle() {
	docker cp $upgrade_name.tar.gz ${project_name}_chain-${chain_index}-region-0-seat_1:@FIXTURE_SYNCDIR@
}

download_bundle() {
	local name=$(echo $upgrade_name | tr [:upper:] [:lower:])
	local upgrade_dir=@DAEMON_HOME@/cosmovisor/upgrades/$name

	for _container in $(get_containers)
	do
		docker exec $_container sh -c "mkdir -p $upgrade_dir/bin && cd $upgrade_dir && tar -xzf @FIXTURE_SYNCDIR@/$upgrade_name.tar.gz && mv @DAEMON_NAME@ bin"
	done
}

submit_upgrade() {
	local height=$1

	local checksum=sha256:$(sha256sum $upgrade_name.tar.gz | awk '{print $1}')
	local info='{"binaries":{"any":"file://'@FIXTURE_SYNCDIR@/$upgrade_name.tar.gz'?checksum='$checksum'"}}'
	docker exec ${project_name}_chain-$chain_index-region-0-seat_1 $daemon tx gov submit-proposal software-upgrade $upgrade_name --upgrade-height $height --upgrade-info $info --title $upgrade_name --description "test upgrade" --deposit @FIXTURE_STATE_MIN_DEPOSIT@@FIXTURE_STATE_BOND_DENOM@ --broadcast-mode block --from operator --gas auto --yes
}

vote() {
	local proposal_id=$1

	for _region_index in $(seq 0 $(expr @FIXTURE_NUM_REGIONS@ - 1))
	do
		docker exec ${project_name}_chain-$chain_index-region-$_region_index-seat_1 $daemon tx gov vote $proposal_id VOTE_OPTION_YES --broadcast-mode sync --from operator --gas auto --yes
	done
}

create_bundle

upgrade_height=$(expr $(get_height) + 10)
submit_upgrade $upgrade_height
vote 1

upload_bundle
if [ "@DAEMON_ALLOW_DOWNLOAD_BINARIES@" != true ]
then
	download_bundle
fi

# wait for the upgrade
while true
do
	if [ "$(get_height)" -ge $(expr $upgrade_height + 1) ] 2>/dev/null
	then
		break
	fi

	sleep 5
done
