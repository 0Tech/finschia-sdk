version: 2.1

defaults: &linux_defaults
  working_directory: /go/src/github.com/line/link
  docker:
    - image: circleci/golang:1.12
      environment:
        GO111MODULE: 'on'

machine_defaults: &machine_defaults
  working_directory: /home/circleci/.go_workspace/src/github.com/line/link
  machine:
    image: circleci/classic:latest
    docker_layer_caching: true
  environment:
    GOPATH: /home/circleci/.go_workspace/
    GOOS: linux
    GOARCH: amd64
    GO_VERSION: "1.12.5"

jobs:
  fmt:
    <<: *linux_defaults
    steps:
      - checkout
      - run:
          name: check formatting
          command: if [[ -n "$(gofmt -l .)" ]]; then gofmt -l .; exit 1; fi

  setup_dependencies:
    <<: *linux_defaults
    steps:
      - run: mkdir -p /tmp/workspace/bin
      - run: mkdir -p /tmp/workspace/profiles
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-mod-{{ checksum "go.sum" }}
      - run:
          name: binaries
          command: |
            export PATH=/tmp/workspace/bin:$PATH
            make go-mod-cache
            make install
      - save_cache:
          key: dependency-cache-mod-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run:
          name: tools
          command: |
            make get-tools
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - bin
  unit_test:
    <<: *linux_defaults
    parallelism: 2
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-mod-{{ checksum "go.sum" }}
      - run: make test-unit-cover
      - run: bash <(curl -s https://codecov.io/bash) -f ./coverage.txt -F "unittest" -Z
  integration_test:
    <<: *linux_defaults
    parallelism: 1
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-mod-{{ checksum "go.sum" }}
      - run:
          name: Test cli
          command: |
            export BUILDDIR=`pwd`/build
            make test-integration
  setup_docker_and_binary:
    <<: *machine_defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - machine-dependency-cache-mod-{{ checksum "go.sum" }}-1.12.5
      - run:
          name: run setup go
          command: |
            set -x
            if [ "$(go version)" != "go version go1.12.5 linux/amd64" ]; then
                mkdir -p /tmp/gobinary
                pushd /tmp/gobinary
                wget https://dl.google.com/go/go$GO_VERSION.linux-amd64.tar.gz
                sudo tar -xvf go$GO_VERSION.linux-amd64.tar.gz
                sudo rm -rf /usr/local/go
                sudo cp -r go /usr/local
                popd
            fi
      - run:
          name: build binaries
          command: |
            set -x
            make build
      - save_cache:
          key: machine-dependency-cache-mod-{{ checksum "go.sum" }}-1.12.5
          paths:
            - "/home/circleci/.go_workspace/pkg/mod"
            - "/tmp/gobinary"

  sim-link-nondeterminism:
    <<: *linux_defaults
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-mod-{{ checksum "go.sum" }}
      - run:
          name: test individual module simulations
          command: |
            make get-tools
            make sim-link-nondeterminism

  sim-link-simulation-after-import:
    <<: *linux_defaults
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-mod-{{ checksum "go.sum" }}
      - run:
          name: test simulation after import
          command: |
            make get-tools
            make sim-link-simulation-after-import

  sim-link-multi-seed:
    <<: *linux_defaults
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-mod-{{ checksum "go.sum" }}
      - run:
          name: test multi-seed simulation
          command: |
            make get-tools
            make sim-link-multi-seed

  sim-link-multi-seed-short:
    <<: *linux_defaults
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-mod-{{ checksum "go.sum" }}
      - run:
          name: test multi-seed simulation (short)
          command: |
            make get-tools
            make sim-link-multi-seed-short

  integration_multi_node_test:
    <<: *machine_defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - machine-dependency-cache-mod-{{ checksum "go.sum" }}-1.12.5
      - run:
          name: copy go compiler
          command: |
            set -x
            pushd /tmp/gobinary
            sudo rm -rf /usr/local/go
            sudo mv go /usr/local
            popd
      - run:
          name: build binary
          command: |
            set -x
            make build
      - run:
          name: build docker image
          command: |
            set -x
            make build-docker
      - run:
          name: run integration test for multi node and exit on failure
          command: |
            set -x
            docker network prune -f
            make test-integration-multi-node
  localnet:
    <<: *machine_defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - machine-dependency-cache-mod-{{ checksum "go.sum" }}-1.12.5
      - run:
          name: copy go compiler
          command: |
            set -x
            pushd /tmp/gobinary
            sudo rm -rf /usr/local/go
            sudo mv go /usr/local
            popd
      - run:
          name: build docker image
          command: |
            set -x
            make build-docker
      - run:
          name: run localnet and exit on failure
          command: |
            set -x
            docker network prune -f
            make testnet-start
            ./networks/local/localnet-blocks-test.sh 40 5 10 localhost
  semantic_release:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - run: yarn global add --no-progress --non-interactive "semantic-release" "@semantic-release/exec"
      - run: $(yarn global bin)/semantic-release

  deploy:
    docker:
      - image: circleci/golang:1.12
    steps:
      - checkout
      - run: curl -sL https://git.io/goreleaser | bash

workflows:
  version: 2.1
  build_and_test:
    jobs:
      - fmt
      - setup_dependencies:
          requires:
            - fmt
      - setup_docker_and_binary:
          requires:
            - fmt
      - unit_test:
          requires:
            - setup_dependencies
      - integration_test:
          requires:
            - setup_dependencies
      - localnet:
          requires:
            - setup_docker_and_binary
      - sim-link-nondeterminism:
          requires:
            - setup_dependencies
      - sim-link-simulation-after-import:
          requires:
            - setup_dependencies
      - sim-link-multi-seed:
          requires:
            - setup_dependencies
          filters:
            branches:
              only: master
      - sim-link-multi-seed-short:
          requires:
            - setup_dependencies
          filters:
            branches:
              ignore: master
      - integration_multi_node_test:
          requires:
            - setup_docker_and_binary
      - semantic_release:
          requires:
            - unit_test
            - integration_test
            - integration_multi_node_test
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - semantic_release
          filters:
            branches:
              only: master
