---
openapi: "3.0.1"
info:
  version: "v1.3.2"
  title: LINK-Lite for link network
  description: A REST interface for state queries, transaction generation and broadcasting.
tags:
  - name: Tendermint RPC
    description: Tendermint APIs, such as query blocks, transactions and node status
  - name: Genesis State
    description: Query gentxs, accounts from genesis data
  - name: Transactions
    description: Search, encode, or broadcast transactions.
  - name: Auth
    description: Authenticate accounts
  - name: Bank
    description: Create and broadcast transactions
  - name: Supply
    description: Supply module APIs
  - name: Token
    description: Token query APIs
  - name: Safety Box
    description: Create/query safety box and grant/revoke permissions
servers:
  - url: /
paths:
  /node_info:
    get:
      description: Information about the connected node
      summary: The properties of the connected node
      tags:
        - Tendermint RPC
      responses:
        "200":
          description: Node status
          content:
            application/json:
              schema:
                type: object
                properties:
                  node_info:
                    $ref: '#/components/schemas/NodeInfo'
                  application_version:
                    $ref: '#/components/schemas/ApplicationVersion'
        "500":
          description: Failed to query node status
  /syncing:
    get:
      summary: Syncing state of node
      tags:
        - Tendermint RPC
      description: Get if the node is currently syning with other nodes
      responses:
        "200":
          description: Node syncing status
          content:
            application/json:
              schema:
                type: object
                properties:
                  syncing:
                    type: boolean
        "500":
          description: Server internal error
  /blocks/latest:
    get:
      summary: Get the latest block
      tags:
        - Tendermint RPC
      parameters:
        - name: extended
          in: query
          description: Whether to translate transaction data in the response
          required: false
          schema:
            type: boolean
          example: true
      responses:
        "200":
          description: The latest block
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockQuery'
        "500":
          description: Server internal error
  /blocks/{height}:
    get:
      summary: Get a block at a certain height
      tags:
        - Tendermint RPC
      parameters:
        - name: height
          in: path
          description: Block height
          required: true
          schema:
            type: integer
          example: 2
        - name: extended
          in: query
          description: Whether to translate transaction data in the response
          required: false
          schema:
            type: boolean
          example: true
      responses:
        "200":
          description: The block at a specific height
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockQuery'
        "400":
          description: Invalid height
        "404":
          description: Request block height doesn't
        "500":
          description: Server internal error
  /blocks_with_tx_results/{from_height}:
    get:
      summary: Get blocks with tx result from from_height to from_height+fetchsize.
      tags:
        - Tendermint RPC
      parameters:
        - name: from_height
          in: path
          description: Block height which you want to start fetching
          required: true
          schema:
            type: integer
          example: 2
        - name: fetchsize
          in: query
          description: Item count you want to fetch at once, default/maxmimum count is 20
          required: false
          schema:
            type: integer
          example: 20
      responses:
        200:
          description: return blocks and tx_response of block
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HasMoreResultBlockWithTxResponses'
        400:
          description: Invalid height
        404:
          description: The requested block height doesn't exist.
        500:
          description: Server internal error
  /num_unconfirmed_txs:
    get:
      summary: Get the number of unconfirmed transactions
      tags:
        - Tendermint RPC
      description: Get the status about mempool of the connected node. Result may vary depending on the node.
      responses:
        "200":
          description: Status about unconfirmed transactions
          content:
            application/json:
              schema:
                type: "object"
                required:
                  - "n_txs"
                  - "total"
                  - "total_bytes"
                  - "txs"
                properties:
                  n_txs:
                    type: "string"
                    description: the number of transactions in the mempool
                    example: "1"
                  total:
                    type: "string"
                    description: the number of transactions in the mempool
                    example: "1"
                  total_bytes:
                    type: "string"
                    description: the total size of all txs in the mempool
                    example: "196"
                  txs:
                    type: string
                    description: this field is always null in /num_unconfirmed_txs
                    nullable: true
        "500":
          description: Server internal error
  /unconfirmed_txs:
    get:
      summary: Get the list of unconfirmed transactions
      tags:
        - Tendermint RPC
      description: Get the tx list from mempool of the connected node. Result may vary depending on the node.
      parameters:
        - name: limit
          in: query
          description: Maximum number of unconfirmed transactions to return (max 100)
          required: false
          schema:
            type: integer
          example: 30
        - name: hash
          in: query
          description: Return tx as hash
          required: false
          schema:
            type: boolean
          example: true
      responses:
        "200":
          description: List of unconfirmed transactions
          content:
            application/json:
              schema:
                type: "object"
                required:
                  - "n_txs"
                  - "total"
                  - "total_bytes"
                  - "txs"
                properties:
                  n_txs:
                    type: "string"
                    description: the number of transactions in the mempool
                    example: "1"
                  total:
                    type: "string"
                    description: the number of transactions in the mempool
                    example: "1"
                  total_bytes:
                    type: "string"
                    description: the total size of all txs in the mempool
                    example: "196"
                  txs:
                    type: array
                    nullable: true
                    items:
                      $ref: '#/components/schemas/Hash'
        "400":
          description: Bad request
        "500":
          description: Server internal error
  /genesis/genutil/gentxs:
    get:
      summary: Get gentxs from genesis data
      tags:
        - Genesis State
      responses:
        "200":
          description: Gentxs in genesis data
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tx'
        "500":
          description: Internal Server Error
  /genesis/app_state/accounts:
    get:
      tags:
        - Genesis State
      parameters:
        - name: page
          in: query
          description: Page number(start to 1)
          required: false
          schema:
            type: integer
          example: 1
        - name: limit
          in: query
          description: Maximum number of items per page(default=30, maximum=100)
          required: false
          schema:
            type: integer
          example: 1
      summary: Get accounts from genesis data
      description: get genesis accounts in genesis data
      responses:
        "200":
          description: Accounts in genesis data
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    type: string
                    example: "1"
                  count:
                    type: string
                    example: "1"
                  page_number:
                    type: string
                    example: "1"
                  page_total:
                    type: string
                    example: "1"
                  limit:
                    type: string
                    example: "30"
                  accounts:
                    type: array
                    items:
                      $ref: '#/components/schemas/GenesisAccount'
        "500":
          description: Server internal error
  /txs/{hash}:
    get:
      summary: Get a Tx by hash
      tags:
        - Transactions
      description: Retrieve a transaction using its hash.
      parameters:
        - name: hash
          in: path
          description: Tx hash
          required: true
          schema:
            type: string
          example: BCBE20E8D46758B96AE5883B792858296AC06E51435490FBDCAE25A72B3CC76B
      responses:
        "200":
          description: Tx with the provided hash
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TxQuery'
        "500":
          description: Internal Server Error
  /txs:
    get:
      tags:
        - Transactions
      summary: Search transactions
      description: Search transactions by events.
      parameters:
        - name: message.action
          in: query
          description: 'transaction events such as ''message.action=send'' which results
          in the following endpoint: ''GET /txs?message.action=send'' message.action or message.sender must be parameter'
          required: false
          schema:
            type: string
          example: send
        - name: message.sender
          in: query
          description: 'transaction tags with sender: ''GET /txs?message.action=send&message.sender=link16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv'' message.action or message.sender must be parameter'
          required: false
          schema:
            type: string
          example: link16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
          example: 1
        - name: limit
          in: query
          description: Maximum number of items per page
          required: false
          schema:
            type: integer
          example: 50
        - name: height.from
          in: query
          description: block height filter
          required: false
          schema:
            type: integer
          example: 1
        - name: height.to
          in: query
          description: block height filter
          required: false
          schema:
            type: integer
          example: 100
      responses:
        "200":
          description: All txs matching the provided events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedQueryTxs'
        "400":
          description: Invalid search events
        "500":
          description: Internal Server Error
    post:
      tags:
        - Transactions
      summary: Broadcast a signed tx
      description: Broadcast a signed tx to a full node
      requestBody:
        description: The tx must be a signed StdTx. The supported broadcast modes
          include `"block"`(return after tx commit), `"sync"`(return afer CheckTx)
          and `"async"`(return right away).
          Supported MSGs are `MsgSend`, `MsgIssue`, `MsgIssueNFT`, `MsgIssueCollection`, `MsgIssueNFTCollection`, `MsgMint`, `MsgBurn`
        content:
          application/json:
            schema:
              type: object
              properties:
                tx:
                  $ref: '#/components/schemas/StdTx'
                mode:
                  type: string
                  example: block
        required: true
      responses:
        "200":
          description: Tx broadcasting result of block mode
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/BroadcastTxBlockResult'
                  - $ref: '#/components/schemas/BroadcastTxSyncResult'
                  - $ref: '#/components/schemas/BroadcastTxAsyncResult'
        "500":
          description: Internal Server Error
      x-codegen-request-body-name: txBroadcast
  /auth/accounts/{address}:
    get:
      tags:
        - Auth
      summary: Get the account information on blockchain
      parameters:
        - name: address
          in: path
          description: Account address
          required: true
          schema:
            type: string
          example: link16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
        - name: height
          in: query
          description: block height (if block height is 0 or be omitted, queries latest block)
          schema:
            type: integer
          required: false
          example: 0
      responses:
        "200":
          description: Account information on the blockchain
          content:
            application/json:
              schema:
                type: object
                properties:
                  height:
                    type: string
                    example: 3
                  result:
                    $ref: '#/components/schemas/Account'
        "500":
          description: Server internel error
  /bank/balances/{address}:
    get:
      summary: Get the account balances
      tags:
        - Bank
      parameters:
        - name: address
          in: path
          description: Account address in bech32 format
          required: true
          schema:
            type: string
          example: link16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
        - name: height
          in: query
          description: block height (if block height is 0 or be omitted, queries latest block)
          schema:
            type: integer
          required: false
          example: 0
      responses:
        "200":
          description: Account balances
          content:
            application/json:
              schema:
                type: object
                properties:
                  height:
                    type: string
                    example: "100"
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/Coin'
        "500":
          description: Server internal error
          content: {}
  /bank/balances/{address}/{denomination}:
    get:
      tags:
        - Bank
      summary: Get the account balances of a single coin denomination
      parameters:
        - name: address
          in: path
          description: Account address in bech32 format
          required: true
          schema:
            type: string
          example: link16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
        - name: denomination
          in: path
          description: Coin denomination
          required: true
          schema:
            type: string
          example: link
        - name: height
          in: query
          description: block height (if block height is 0 or be omitted, queries latest block)
          schema:
            type: integer
          required: false
          example: 0
      responses:
        "200":
          description: Account balances
          content:
            application/json:
              schema:
                type: object
                properties:
                  height:
                    type: string
                    example: "100"
                  result:
                    type: string
                    example: "100"
        "500":
          description: Server internal error
  /supply/total:
    get:
      tags:
        - Supply
      summary: Total supply of coins in the chain
      parameters:
        - name: height
          in: query
          description: block height (if block height is 0 or be omitted, queries latest block)
          schema:
            type: integer
          required: false
          example: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  height:
                    type: string
                    example: "100"
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/Coin'
        "500":
          description: Internal Server Error
  /supply/total/{denomination}:
    get:
      tags:
        - Supply
      summary: Total supply of a single coin denomination
      parameters:
        - name: denomination
          in: path
          description: Coin denomination
          required: true
          schema:
            type: string
          example: link
        - name: height
          in: query
          description: block height (if block height is 0 or be omitted, queries latest block)
          schema:
            type: integer
          required: false
          example: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  height:
                    type: string
                    example: "100"
                  result:
                    type: string
                    example: "100"
        "400":
          description: Invalid coin denomination
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /token/collections/{symbol}:
    get:
      tags:
        - Collection
      summary: Get the Collection details
      parameters:
        - name: symbol
          in: path
          description: Collection symbol
          required: true
          schema:
            type: string
          example: "conyxxv"
        - name: height
          in: query
          description: block height (if block height is 0 or be omitted, queries latest block)
          schema:
            type: integer
          required: false
          example: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  height:
                    type: string
                    example: "100"
                  result:
                    $ref: '#/components/schemas/CollectionToken'
        "500":
          description: Internal Server Error
  /token/collections:
    get:
      tags:
        - Collection
      summary: Get all Collections
      parameters:
        - name: height
          in: query
          description: block height (if block height is 0 or be omitted, queries latest block)
          schema:
            type: integer
          required: false
          example: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  height:
                    type: string
                    example: "100"
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/CollectionToken'
        "500":
          description: Internal Server Error
  /token/tokens/{symbol}/{token_id}:
    get:
      tags:
        - Token
      summary: Get the token details
      parameters:
        - name: symbol
          in: path
          description: Coin denomination
          required: true
          schema:
            type: string
          example: "con2xxv"
        - name: token_id
          in: path
          description: token id
          required: true
          schema:
            type: string
          example: "00000001"
        - name: height
          in: query
          description: block height (if block height is 0 or be omitted, queries latest block)
          schema:
            type: integer
          required: false
          example: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  height:
                    type: string
                    example: "100"
                  result:
                    oneOf:
                      - $ref: '#/components/schemas/TokenIDFT'
                      - $ref: '#/components/schemas/TokenIDNFT'
        "500":
          description: Internal Server Error
  /token/tokens/{symbol}:
    get:
      tags:
        - Token
      summary: Get the token details
      parameters:
        - name: symbol
          in: path
          description: Coin denomination
          required: true
          schema:
            type: string
          example: "conyxxv"
        - name: height
          in: query
          description: block height (if block height is 0 or be omitted, queries latest block)
          schema:
            type: integer
          required: false
          example: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  height:
                    type: string
                    example: "100"
                  result:
                    oneOf:
                      - $ref: '#/components/schemas/TokenFT'
                      - $ref: '#/components/schemas/TokenNFT'
        "500":
          description: Internal Server Error
  /token/tokens:
    get:
      tags:
        - Token
      summary: Get all tokens
      parameters:
        - name: height
          in: query
          description: block height (if block height is 0 or be omitted, queries latest block)
          schema:
            type: integer
          required: false
          example: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  height:
                    type: string
                    example: "100"
                  result:
                    type: array
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/TokenFT'
                        - $ref: '#/components/schemas/TokenNFT'
                        - $ref: '#/components/schemas/TokenIDFT'
                        - $ref: '#/components/schemas/TokenIDNFT'
        "500":
          description: Internal Server Error
  /safetybox/{id}:
    get:
      tags:
        - Safety Box
      summary: Get a safety box
      parameters:
        - name: id
          in: path
          description: safety box id
          required: true
          schema:
            type: string
          example: "my_safety_box"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  height:
                    type: string
                    example: "100"
                  result:
                    type: object
                    properties:
                      type:
                        type: string
                        example: "safetybox"
                      value:
                        $ref: '#/components/schemas/SafetyBox'
  /safetybox/{id}/role/{role}/{address}:
    get:
      tags:
        - Safety Box
      summary: Get a list of permissions of the user for the safety box
      parameters:
        - name: id
          in: path
          description: safety box id
          required: true
          schema:
            type: string
          example: "my_safety_box"
        - name: role
          in: path
          description: role of safetybox
          required: true
          schema:
            type: string
          example: "operator"
        - name: address
          in: path
          description: account address
          required: true
          schema:
            type: string
          example: "link16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  height:
                    type: string
                    example: "100"
                  result:
                    $ref: '#/components/schemas/SafetyBoxPermissions'
components:
  schemas:
    #-------------------------------
    # Base Models
    #-------------------------------
    Hash:
      type: string
      example: "777467B3B9FF7918B15D374EC0510AADE8026D3B91795AFA25B50888199DFD20"
    Address:
      type: string
      description: bech32 encoded address
      example: "link1ffxp9g0qcp6quqjhq6cmdz69ztnu3khx524uhp"
    ValidatorAddress:
      type: string
      description: bech32 encoded address
      example: "linkvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l"
    Timestamp:
      type: string
      example: "2019-08-25T10:04:50.357159306Z"
    Signature:
      type: string
      description: base64
      example: "7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ=="
    PublicKey:
      type: object
      properties:
        type:
          type: string
          example: "tendermint/PubKeySecp256k1"
        value:
          type: string
          example: "AmtHHdw+9xASQejvAzOwj/BT8AumZGJHWKKb4Gg5hssC"
    KVPair:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    Coin:
      type: object
      properties:
        denom:
          type: string
          example: link
        amount:
          type: string
          example: "50"
    Vote:
      type: object
      properties:
        block_id:
          $ref: '#/components/schemas/BlockID'
        height:
          type: string
          example: "0"
        round:
          type: string
          example: "0"
        signature:
          $ref: '#/components/schemas/Signature'
        timestamp:
          $ref: '#/components/schemas/Timestamp'
        type:
          type: integer
          description: Prevote (1), Precommit (2)
          example: 2
        validator_address:
          $ref: '#/components/schemas/ValidatorAddress'
        validator_index:
          type: string
          example: "0"


    #-------------------------------
    # Node Info Models
    #-------------------------------
    NodeInfo:
      type: object
      properties:
        protocol_version:
          type: object
          properties:
            p2p:
              type: string
              description: version of the p2p protocol
              example: "7"
            block:
              type: string
              description: version of the block protocol
              example: "10"
            app:
              type: string
              description: version of the app protocol
              example: "0"
        id:
          type: string
          description: authenticated identifier
          example: "f412d9c118b98b41364130e9caf4ddbae3083b82"
        listen_addr:
          type: string
          description: accepting incoming address of node
          example: 192.168.56.2:26656
        network:
          type: string
          description: network/chain ID
          example: link
        version:
          type: string
          description: Tendermint version
          example: 0.15.0
        channels:
          type: string
          description: channels this node knows about
          example: "4020212223303800"
        moniker:
          type: string
          description: validator name
          example: validator-name
        other:
          type: object
          properties:
            tx_index:
              type: string
              description: tx indexing is enabled
              example: "on"
            rpc_address:
              type: string
              description: accepting incoming address of rpc
              example: tcp://0.0.0.0:26657
          description: more information on versions
    ApplicationVersion:
      type: object
      properties:
        name:
          type: string
          example: ""
        server_name:
          type: string
          example: "<appd>"
        client_name:
          type: string
          example: "<appcli>"
        version:
          type: string
          example: ""
        commit:
          type: string
          description: "git commit"
          example: ""
        build_tags:
          type: string
          example: ""
        go:
          type: string
          example: "go version go1.13.5 linux/amd64"

    #-------------------------------
    # Block Models
    #-------------------------------
    BlockQuery:
      type: object
      properties:
        block:
          $ref: '#/components/schemas/Block'
        block_meta:
          type: object
          properties:
            block_id:
              $ref: '#/components/schemas/BlockID'
            header:
              $ref: '#/components/schemas/BlockHeader'
    ResultBlockBlock:
      type: object
      properties:
        block:
          $ref: '#/components/schemas/BlockStringTx'
        block_meta:
          type: object
          properties:
            block_id:
              $ref: '#/components/schemas/BlockID'
            header:
              $ref: '#/components/schemas/BlockHeader'
    BlockStringTx:
      type: object
      properties:
        data:
          type: object
          description: a wrapper for a list of transactions
          properties:
            txs:
              type: array
              items:
                $ref: '#/components/schemas/Hash'
        evidence:
          type: object
          description: a list of evidence of malfeasance. There is currently only a single type, the DuplicateVoteEvidence
          properties:
            evidence:
              type: array
              items:
                $ref: '#/components/schemas/DuplicateVoteEvidence'
        header:
          $ref: '#/components/schemas/BlockHeader'
        last_commit:
          type: object
          description: the set of signatures of validators that committed the last block
          properties:
            block_id:
              $ref: '#/components/schemas/BlockID'
            precommits:
              type: array
              items:
                $ref: '#/components/schemas/Vote'
              nullable: true
    Block:
      type: object
      properties:
        data:
          type: object
          description: a wrapper for a list of transactions
          properties:
            txs:
              type: array
              items:
                $ref: '#/components/schemas/Tx'
        evidence:
          type: object
          description: a list of evidence of malfeasance. There is currently only a single type, the DuplicateVoteEvidence
          properties:
            evidence:
              type: array
              items:
                $ref: '#/components/schemas/DuplicateVoteEvidence'
        header:
          $ref: '#/components/schemas/BlockHeader'
        last_commit:
          type: object
          description: the set of signatures of validators that committed the last block
          properties:
            block_id:
              $ref: '#/components/schemas/BlockID'
            precommits:
              type: array
              items:
                $ref: '#/components/schemas/Vote'
              nullable: true
    ResultBlock:
      $ref: '#/components/schemas/ResultBlockBlock'
    BlockHeader:
      type: object
      description: contains merkle hashes for various chain states
      properties:
        app_hash:
          allOf:
            - $ref: '#/components/schemas/Hash'
            - description: MerkleRoot of state after txs from the previous block
        chain_id:
          type: string
          example: link-0001
        consensus_hash:
          allOf:
            - $ref: '#/components/schemas/Hash'
            - description: Hash of the amino-encoding of a subset of the consensus params for current block
        data_hash:
          allOf:
            - $ref: '#/components/schemas/Hash'
            - description: MerkleRoot of the hashes of transactions included in the block
        evidence_hash:
          allOf:
            - $ref: '#/components/schemas/Hash'
            - description: MerkleRoot of the evidence of Byzantine behaviour included in this block
        height:
          type: string
          example: "1"
        last_block_id:
          $ref: '#/components/schemas/BlockID'
        last_commit_hash:
          allOf:
            - $ref: '#/components/schemas/Hash'
            - description: MerkleRoot of the commit from the last block's validators
        last_results_hash:
          allOf:
            - $ref: '#/components/schemas/Hash'
            - description: MerkleRoot of the results of the transactions in the previous block
        next_validators_hash:
          allOf:
            - $ref: '#/components/schemas/Hash'
            - description: MerkleRoot of the next validator set that will be the validator set that commits the next block
        num_txs:
          type: string
          example: "35"
        proposer_address:
          allOf:
            - $ref: '#/components/schemas/ValidatorAddress'
            - description: original proposer of the block
        time:
          $ref: '#/components/schemas/Timestamp'
        total_txs:
          type: string
          example: "35"
        validators_hash:
          allOf:
            - $ref: '#/components/schemas/Hash'
            - description: MerkleRoot of the current validator set that is committing the block
        version:
          type: object
          properties:
            block:
              type: string
              example: "10"
            app:
              type: string
              example: "0"
    BlockID:
      type: object
      properties:
        hash:
          allOf:
            - $ref: '#/components/schemas/Hash'
            - description: Merkle root of the block header
        parts:
          type: object
          properties:
            hash:
              allOf:
                - $ref: '#/components/schemas/Hash'
                - description: Merkle root of the block parts
            total:
              type: string
              description: Number of the block parts
              example: "1"

    #-------------------------------
    # Transaction Models
    #-------------------------------
    PaginatedQueryTxs:
      type: object
      properties:
        total_count:
          type: string
          description: Count of all txs
          example: "1"
        count:
          type: string
          description: Count of txs in current page
          example: "1"
        page_number:
          type: string
          description: Index of current page, start from 1
          example: "1"
        page_total:
          type: string
          description: Count of total pages
          example: "1"
        limit:
          type: string
          description: Max count txs per page
          example: "30"
        txs:
          type: array
          description: List of txs in current page
          items:
            $ref: '#/components/schemas/TxQuery'
          nullable: true
    TxResponse:
      type: object
      properties:
        height:
          type: string
          example: "368"
        txhash:
          $ref: '#/components/schemas/Hash'
        raw_log:
          type: string
          description: The raw string output of the logger
          example: '[{"msg_index":0,"success":true,"log":""}]'
        logs:
          type: array
          items:
            type: object
            properties:
              msg_index:
                type: integer
              success:
                type: boolean
              log:
                type: string
        gas_wanted:
          type: string
          description: Amount of gas requested for transaction
          example: "200000"
        gas_used:
          type: string
          description: Amount of gas consumed by transaction
          example: "26354"
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
        tx:
          $ref: '#/components/schemas/Tx'
        timestamp:
          $ref: '#/components/schemas/Timestamp'
    TxQuery:
      type: object
      properties:
        height:
          type: string
          example: "368"
        txhash:
          $ref: '#/components/schemas/Hash'
        index:
          type: integer
          example: 1
        code:
          type: integer
          description: Response code
          example: 0
        raw_log:
          type: string
          description: The raw string output of the logger
          example: '[{"msg_index":0,"success":true,"log":""}]'
        logs:
          type: array
          items:
            type: object
            properties:
              msg_index:
                type: integer
              success:
                type: boolean
              log:
                type: string
        gas_wanted:
          type: string
          description: Amount of gas requested for transaction
          example: "200000"
        gas_used:
          type: string
          description: Amount of gas consumed by transaction
          example: "26354"
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
        tx:
          $ref: '#/components/schemas/Tx'
        timestamp:
          $ref: '#/components/schemas/Timestamp'
    Event:
      type: object
      properties:
        type:
          type: string
          description: categorize the event for a particular tx
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/KVPair'
    Tx:
      type: object
      properties:
        type:
          type: string
          example: cosmos-sdk/StdTx
        value:
          $ref: '#/components/schemas/StdTx'
    StdTx:
      type: object
      properties:
        msg:
          type: array
          items:
            # Because Dredd doesn't support anyOf, You have to add new Msg example to MsgExamples for dredd test
            anyOf:
              - $ref: '#/components/schemas/MsgSend'
              - $ref: '#/components/schemas/MsgIssue'
              - $ref: '#/components/schemas/MsgModifyTokenURI'
              - $ref: '#/components/schemas/MsgIssueCollection'
              - $ref: '#/components/schemas/MsgIssueNFT'
              - $ref: '#/components/schemas/MsgIssueNFTCollection'
              - $ref: '#/components/schemas/MsgMint'
              - $ref: '#/components/schemas/MsgBurn'
              - $ref: '#/components/schemas/MsgCreateValidator'
              - $ref: '#/components/schemas/MsgSafetyBoxCreate'
              - $ref: '#/components/schemas/MsgSafetyBoxAllocateCoins'
              - $ref: '#/components/schemas/MsgSafetyBoxRecallCoins'
              - $ref: '#/components/schemas/MsgSafetyBoxIssueCoins'
              - $ref: '#/components/schemas/MsgSafetyBoxReturnCoins'
              - $ref: '#/components/schemas/MsgSafetyBoxRegisterOperator'
              - $ref: '#/components/schemas/MsgSafetyBoxDeregisterOperator'
              - $ref: '#/components/schemas/MsgSafetyBoxRegisterAllocator'
              - $ref: '#/components/schemas/MsgSafetyBoxDeregisterAllocator'
              - $ref: '#/components/schemas/MsgSafetyBoxRegisterIssuer'
              - $ref: '#/components/schemas/MsgSafetyBoxDeregisterIssuer'
              - $ref: '#/components/schemas/MsgSafetyBoxRegisterReturner'
              - $ref: '#/components/schemas/MsgSafetyBoxDeregisterReturner'
          example:
            $ref: '#/components/examples/MsgExamples'
        fee:
          type: object
          properties:
            amount:
              type: array
              items:
                $ref: '#/components/schemas/Coin'
            gas:
              type: string
              example: "30000"
        signatures:
          type: array
          items:
            type: object
            properties:
              pub_key:
                $ref: '#/components/schemas/PublicKey'
              signature:
                $ref: '#/components/schemas/Signature'
        memo:
          type: string
          example: "26354"


    #-------------------------------
    # Block With Transaction Models
    #-------------------------------
    HasMoreResultBlockWithTxResponses:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ResultBlockWithTxResponse'
        has_more:
          type: boolean
      required:
        - "items"
        - "has_more"
    ResultBlockWithTxResponse:
      type: "object"
      properties:
        result_block:
          $ref: '#/components/schemas/ResultBlock'
        tx_responses:
          type: array
          nullable: true
          example: null
          items:
            $ref: '#/components/schemas/TxResponse'
      required:
        - "result_block"

    #-------------------------------
    # Evidence Models
    #-------------------------------
    DuplicateVoteEvidence:
      type: object
      description: Evidence a validator signed two conflicting votes
      properties:
        type:
          type: string
          example: "tendermint/DuplicateVoteEvidence"
        value:
          type: object
          properties:
            PubKey:
              $ref: '#/components/schemas/PublicKey'
            VoteA:
              $ref: '#/components/schemas/Vote'
            VoteB:
              $ref: '#/components/schemas/Vote'

    #-------------------------------
    # Account Models
    #-------------------------------
    Account:
      type: object
      properties:
        type:
          type: string
          example: "cosmos-sdk/Account"
        value:
          type: object
          properties:
            address:
              $ref: '#/components/schemas/Address'
            coins:
              type: array
              items:
                $ref: '#/components/schemas/Coin'
            public_key:
              $ref: '#/components/schemas/PublicKey'
            account_number:
              type: string
              description: A number specified when the account was first created
              example: "1"
            sequence:
              type: string
              description: An increasing number each time you sign a message with a given account
              example: "11"
    GenesisAccount:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        coins:
          type: array
          items:
            $ref: '#/components/schemas/Coin'
        public_key:
          type: object
          nullable: true
          example: null
        account_number:
          type: string
          description: A number specified when the account was first created
          example: "0"
        sequence:
          type: string
          description: An increasing number each time you sign a message with a given account
          example: "0"

    #-------------------------------
    # Token Models
    #-------------------------------
    TokenFT:
      type: object
      properties:
        type:
          type: string
          example: "link/FT"
        value:
          type: object
          properties:
            name:
              type: string
              example: "test-cony"
            symbol:
              type: string
              example: "conyxxv"
            mintable:
              type: boolean
              example: true
            decimals:
              type: string
              example: "8"
    TokenNFT:
      type: object
      properties:
        type:
          type: string
          example: "link/NFT"
        value:
          type: object
          properties:
            owner:
              $ref: '#/components/schemas/Address'
            name:
              type: string
              example: "test-cony"
            symbol:
              type: string
              example: "conyxxv"
            token_uri:
              type: string
              example: "example.com/token_uri"
    TokenIDFT:
      type: object
      properties:
        type:
          type: string
          example: "link/IDFT"
        value:
          type: object
          properties:
            name:
              type: string
              example: "test-cony"
            symbol:
              type: string
              example: "conyxxv"
            mintable:
              type: boolean
              example: true
            decimals:
              type: string
              example: "8"
            token_id:
              type: string
              example: "00000001"
    TokenIDNFT:
      type: object
      properties:
        type:
          type: string
          example: "link/FT"
        value:
          type: object
          properties:
            owner:
              $ref: '#/components/schemas/Address'
            name:
              type: string
              example: "test-cony"
            symbol:
              type: string
              example: "conyxxv"
            token_uri:
              type: string
              example: "example.com/token_uri"
            token_id:
              type: string
              example: "00000001"
    Collection:
      type: object
      properties:
        symbol:
          type: string
          example: "conyxxv"
    CollectionToken:
      type: object
      properties:
        collection:
          $ref: '#/components/schemas/Collection'
        tokens:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/TokenFT'
              - $ref: '#/components/schemas/TokenNFT'
              - $ref: '#/components/schemas/TokenIDFT'
              - $ref: '#/components/schemas/TokenIDNFT'

    #-------------------------------
    # Safety Box Models
    #-------------------------------
    SafetyBox:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/SafetyBoxId'
        owner:
          allOf:
            - $ref: '#/components/schemas/Address'
            - description: owner of the safetybox
        address:
          allOf:
            - $ref: '#/components/schemas/Address'
            - description: address of the safetybox
        denoms:
          type: array
          items:
            type: string
            example: "link"
        total_allocation:
          type: array
          description: current total allocation amount
          items:
            $ref: '#/components/schemas/Coin'
        cumulative_allocation:
          type: array
          description: cumulative total allocation amount
          items:
            $ref: '#/components/schemas/Coin'
        total_issuance:
          type: array
          description: current total issuance amount
          items:
            $ref: '#/components/schemas/Coin'
    SafetyBoxPermissions:
      type: object
      properties:
        has_role:
          type: boolean
          example: true
    SafetyBoxId:
      type: string
      description: id of the safetybox
      example: "my_safety_box"

    #-------------------------------
    # BroadcastTx Result Models
    #-------------------------------
    BroadcastTxBlockResult:
      type: object
      properties:
        height:
          type: string
          example: "368"
        txhash:
          $ref: '#/components/schemas/Hash'
        raw_log:
          type: string
          description: The raw string output of the logger
          example: '[{"msg_index":0,"success":true,"log":""}]'
        logs:
          type: array
          items:
            type: object
            properties:
              msg_index:
                type: integer
              success:
                type: boolean
              log:
                type: string
        gas_wanted:
          type: string
          description: Amount of gas requested for transaction
          example: "200000"
        gas_used:
          type: string
          description: Amount of gas consumed by transaction
          example: "26354"
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
    BroadcastTxSyncResult:
      type: object
      properties:
        height:
          type: string
          example: "0"
        txhash:
          $ref: '#/components/schemas/Hash'
        raw_log:
          type: string
          description: The raw string output of the logger
          example: '[{"msg_index":0,"success":true,"log":""}]'
        logs:
          type: array
          items:
            type: object
            properties:
              msg_index:
                type: integer
              success:
                type: boolean
              log:
                type: string
    BroadcastTxAsyncResult:
      type: object
      properties:
        height:
          type: string
          example: "0"
        txhash:
          $ref: '#/components/schemas/Hash'

    #-------------------------------
    # Message Models
    #-------------------------------
    # If you want to add new Msg, You have to add new Msg example to MsgExamples for dredd test
    MsgSend:
      type: object
      properties:
        type:
          type: string
          example: "cosmos-sdk/MsgSend"
        value:
          type: object
          properties:
            from_address:
              $ref: '#/components/schemas/Address'
            to_address:
              $ref: '#/components/schemas/Address'
            amount:
              $ref: '#/components/schemas/Coin'
    MsgIssue:
      type: object
      description: msg of token creation
      properties:
        type:
          type: string
          example: "link/MsgIssue"
        value:
          type: object
          properties:
            owner:
              $ref: '#/components/schemas/Address'
            name:
              type: string
              example: "cony"
            symbol:
              type: string
              example: "conyxxv"
            token_uri:
              type: string
              example: "example.com/token_uri"
            amount:
              type: string
              example: "1000000"
            mintable:
              type: boolean
              example: true
            decimals:
              type: string
              example: "8"
    MsgModifyTokenURI:
      type: object
      description: msg of token creation
      properties:
        type:
          type: string
          example: "link/MsgModifyTokenURI"
        value:
          type: object
          properties:
            owner:
              $ref: '#/components/schemas/Address'
            symbol:
              type: string
              example: "conyxxv"
            token_uri:
              type: string
              example: "example.com/token_uri"
            token_id:
              type: string
              example: "00000001"
    MsgIssueCollection:
      type: object
      description: msg of collection token creation
      properties:
        type:
          type: string
          example: "link/MsgIssueCollection"
        value:
          type: object
          properties:
            owner:
              $ref: '#/components/schemas/Address'
            name:
              type: string
              example: "cony"
            symbol:
              type: string
              example: "conyxxv"
            token_uri:
              type: string
              example: "example.com/token_uri"
            amount:
              type: string
              example: "1000000"
            mintable:
              type: boolean
              example: true
            decimals:
              type: string
              example: "8"
            token_id:
              type: string
              example: "00000001"
    MsgIssueNFT:
      type: object
      description: msg of non-fungible token creation
      properties:
        type:
          type: string
          example: "link/MsgIssueNFT"
        value:
          type: object
          properties:
            owner:
              $ref: '#/components/schemas/Address'
            name:
              type: string
              example: "cony"
            symbol:
              type: string
              example: "conyxxv"
            token_uri:
              type: string
              example: "example.com/token_uri"
    MsgIssueNFTCollection:
      type: object
      description: msg of non-fungible collection token creation
      properties:
        type:
          type: string
          example: "link/MsgIssueNFTCollection"
        value:
          type: object
          properties:
            owner:
              $ref: '#/components/schemas/Address'
            name:
              type: string
              example: "cony"
            symbol:
              type: string
              example: "conyxxv"
            token_uri:
              type: string
              example: "example.com/token_uri"
            token_id:
              type: string
              example: "00000001"
    MsgMint:
      type: object
      description: msg of token mint
      properties:
        type:
          type: string
          example: "link/MsgMint"
        value:
          type: object
          properties:
            to:
              $ref: '#/components/schemas/Address'
            amount:
              $ref: '#/components/schemas/Coin'
    MsgBurn:
      type: object
      description: msg of token burn
      properties:
        type:
          type: string
          example: "link/MsgBurn"
        value:
          type: object
          properties:
            from:
              $ref: '#/components/schemas/Address'
            amount:
              $ref: '#/components/schemas/Coin'
    MsgCreateValidator:
      type: object
      properties:
        type:
          type: string
          example: "cosmos-sdk/MsgCreateValidator"
        value:
          type: object
          properties:
            description:
              type: object
              properties:
                moniker:
                  type: string
                  description: name
                  example: "node3"
                identity:
                  type: string
                  description: optional identity signature (ex. UPort or Keybase)
                  example: ""
                website:
                  type: string
                  description: optional website link
                  example: ""
                details:
                  type: string
                  description: optional details
                  example: ""
            commission:
              type: object
              description: initial commission rates to be used for creating a validator
              properties:
                rate:
                  type: string
                  description: the commission rate charged to delegators, as a fraction
                  example: "0.000000000000000000"
                max_rate:
                  type: string
                  description: maximum commission rate which validator can ever charge, as a fraction
                  example: "0.000000000000000000"
                max_change_rate:
                  type: string
                  description: maximum daily increase of the validator commission, as a fraction
                  example: "0.000000000000000000"
            min_self_delegation:
              type: string
              description: The minimum self delegation required on the validator
              example: "1"
            delegator_address:
              $ref: '#/components/schemas/Address'
            validator_address:
              $ref: '#/components/schemas/ValidatorAddress'
            pubkey:
              type: string
              example: "linkvalconspub1zcjduepqxe4h4luwpmj96lqgfke8qdfhcwhdsjpvdpjk2x6x4y534l5wkmpsrtm99f"
            value:
              allOf:
                - $ref: '#/components/schemas/Coin'
                - description: self description value
    MsgSafetyBoxCreate:
      type: object
      properties:
        type:
          type: string
          example: "safetybox/MsgCreate"
        value:
          type: object
          properties:
            safety_box_id:
              $ref: '#/components/schemas/SafetyBoxId'
            safety_box_owner:
              $ref: '#/components/schemas/Address'
            safety_box_denoms:
              type: array
              items:
                type: string
                example: "link"
    MsgSafetyBoxAllocateCoins:
      type: object
      properties:
        type:
          type: string
          example: "safetybox/MsgAllocate"
        value:
          type: object
          properties:
            safety_box_id:
              $ref: '#/components/schemas/SafetyBoxId'
            allocator_address:
              $ref: '#/components/schemas/Address'
            coins:
              type:
                array
              items:
                $ref: '#/components/schemas/Coin'
    MsgSafetyBoxRecallCoins:
      type: object
      properties:
        type:
          type: string
          example: "safetybox/MsgRecall"
        value:
          type: object
          properties:
            safety_box_id:
              $ref: '#/components/schemas/SafetyBoxId'
            allocator_address:
              $ref: '#/components/schemas/Address'
            coins:
              type:
                array
              items:
                $ref: '#/components/schemas/Coin'
    MsgSafetyBoxIssueCoins:
      type: object
      properties:
        type:
          type: string
          example: "safetybox/MsgIssue"
        value:
          type: object
          properties:
            safety_box_id:
              $ref: '#/components/schemas/SafetyBoxId'
            from_address:
              $ref: '#/components/schemas/Address'
            to_address:
              $ref: '#/components/schemas/Address'
            coins:
              type:
                array
              items:
                $ref: '#/components/schemas/Coin'
    MsgSafetyBoxReturnCoins:
      type: object
      properties:
        type:
          type: string
          example: "safetybox/MsgReturn"
        value:
          type: object
          properties:
            safety_box_id:
              $ref: '#/components/schemas/SafetyBoxId'
            returner_address:
              $ref: '#/components/schemas/Address'
            coins:
              type:
                array
              items:
                $ref: '#/components/schemas/Coin'
    MsgSafetyBoxRegisterOperator:
      type: object
      properties:
        type:
          type: string
          example: "safetybox/MsgGrantOperatorPermission"
        value:
          type: object
          properties:
            safety_box_id:
              $ref: '#/components/schemas/SafetyBoxId'
            safety_box_owner:
              $ref: '#/components/schemas/Address'
            address:
              $ref: '#/components/schemas/Address'
    MsgSafetyBoxDeregisterOperator:
      type: object
      properties:
        type:
          type: string
          example: "safetybox/MsgRevokeOperatorPermission"
        value:
          type: object
          properties:
            safety_box_id:
              $ref: '#/components/schemas/SafetyBoxId'
            safety_box_owner:
              $ref: '#/components/schemas/Address'
            address:
              $ref: '#/components/schemas/Address'
    MsgSafetyBoxRegisterAllocator:
      type: object
      properties:
        type:
          type: string
          example: "safetybox/MsgGrantAllocatorPermission"
        value:
          type: object
          properties:
            safety_box_id:
              $ref: '#/components/schemas/SafetyBoxId'
            operator:
              $ref: '#/components/schemas/Address'
            address:
              $ref: '#/components/schemas/Address'
    MsgSafetyBoxDeregisterAllocator:
      type: object
      properties:
        type:
          type: string
          example: "safetybox/MsgRevokeAllocatorPermission"
        value:
          type: object
          properties:
            safety_box_id:
              $ref: '#/components/schemas/SafetyBoxId'
            operator:
              $ref: '#/components/schemas/Address'
            address:
              $ref: '#/components/schemas/Address'
    MsgSafetyBoxRegisterIssuer:
      type: object
      properties:
        type:
          type: string
          example: "safetybox/MsgGrantIssuerPermission"
        value:
          type: object
          properties:
            safety_box_id:
              $ref: '#/components/schemas/SafetyBoxId'
            operator:
              $ref: '#/components/schemas/Address'
            address:
              $ref: '#/components/schemas/Address'
    MsgSafetyBoxDeregisterIssuer:
      type: object
      properties:
        type:
          type: string
          example: "safetybox/MsgRevokeIssuerPermission"
        value:
          type: object
          properties:
            safety_box_id:
              $ref: '#/components/schemas/SafetyBoxId'
            operator:
              $ref: '#/components/schemas/Address'
            address:
              $ref: '#/components/schemas/Address'
    MsgSafetyBoxRegisterReturner:
      type: object
      properties:
        type:
          type: string
          example: "safetybox/MsgGrantReturnerPermission"
        value:
          type: object
          properties:
            safety_box_id:
              $ref: '#/components/schemas/SafetyBoxId'
            operator:
              $ref: '#/components/schemas/Address'
            address:
              $ref: '#/components/schemas/Address'
    MsgSafetyBoxDeregisterReturner:
      type: object
      properties:
        type:
          type: string
          example: "safetybox/MsgRevokeReturnerPermission"
        value:
          type: object
          properties:
            safety_box_id:
              $ref: '#/components/schemas/SafetyBoxId'
            operator:
              $ref: '#/components/schemas/Address'
            address:
              $ref: '#/components/schemas/Address'

  examples:
    # If you want to add new Msg, You have to add new Msg example to MsgExamples for dredd test
    MsgExamples:
      value: [
      {
        "type": "cosmos-sdk/MsgSend",
        "value": {
          "from_address": "link16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv",
          "to_address": "link16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv",
          "amount": [
          {
            "denom": "link",
            "amount": "1"
          }
          ]
        }
      },
      {
        "type": "link/MsgIssue",
        "value": {
          "name": "cony",
          "symbol": "conyxxv",
          "owner": "link16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv",
          "token_uri": "example.com/token_uri",
          "amount": "1000000",
          "mintable": true,
          "decimals": "8"
        }
      },
      {
        "type": "link/MsgModifyTokenURI",
        "value": {
          "owner": "link16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv",
          "symbol": "conyxxv",
          "token_uri": "example.com/token_uri",
          "token_id": ""
        }
      },
      {
        "type": "link/MsgIssueCollection",
        "value": {
          "name": "cony",
          "symbol": "con2xxv",
          "owner": "link16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv",
          "token_uri": "example.com/token_uri",
          "amount": "1000000",
          "mintable": true,
          "decimals": "8",
          "token_id": "00000001"
        }
      },
      {
        "type": "link/MsgIssueNFT",
        "value": {
          "name": "cony",
          "symbol": "con3xxv",
          "owner": "link16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv",
          "token_uri": "example.com/token_uri"
        }
      },
      {
        "type": "link/MsgIssueNFTCollection",
        "value": {
          "name": "cony",
          "symbol": "con4xxv",
          "owner": "link16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv",
          "token_uri": "example.com/token_uri",
          "token_id": "00000001"
        }
      },
      {
        "type": "link/MsgMint",
        "value": {
          "to": "link16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv",
          "amount": [{
                       "denom": "conyxxv",
                       "amount": "1"
                     }]
        }
      },
      {
        "type": "link/MsgBurn",
        "value": {
          "from": "link16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv",
          "amount": [{
                       "denom": "conyxxv",
                       "amount": "1"
                     }]
        }
      },
      {
        "type": "safetybox/MsgCreate",
        "value": {
          "safety_box_id": "my_safety_box",
          "safety_box_owner": "link16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv",
          "safety_box_denoms": ["link"]
        }
      },
      {
        "type": "safetybox/MsgGrantOperatorPermission",
        "value": {
          "safety_box_id": "my_safety_box",
          "safety_box_owner": "link16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv",
          "address": "linkoperatormpp92x9hyzz9wrgf94r6j9h5f06pxxv"
        }
      },
      {
        "type": "safetybox/MsgGrantAllocatorPermission",
        "value": {
          "safety_box_id": "my_safety_box",
          "operator": "linkoperatormpp92x9hyzz9wrgf94r6j9h5f06pxxv",
          "address": "linkallocatorpp92x9hyzz9wrgf94r6j9h5f06pxxv"
        }
      },
      {
        "type": "safetybox/MsgGrantIssuerPermission",
        "value": {
          "safety_box_id": "my_safety_box",
          "operator": "linkoperatormpp92x9hyzz9wrgf94r6j9h5f06pxxv",
          "address": "linkissuetormpp92x9hyzz9wrgf94r6j9h5f06pxxv"
        }
      },
      {
        "type": "safetybox/MsgGrantReturnerPermission",
        "value": {
          "safety_box_id": "my_safety_box",
          "operator": "linkoperatormpp92x9hyzz9wrgf94r6j9h5f06pxxv",
          "address": "linkreturnormpp92x9hyzz9wrgf94r6j9h5f06pxxv"
        }
      },
      {
        "type": "safetybox/MsgAllocate",
        "value": {
          "safety_box_id": "my_safety_box",
          "allocator_address": "linkallocatorpp92x9hyzz9wrgf94r6j9h5f06pxxv",
          "coins": [{
                      "denom": "link",
                      "amount": "2"
                    }]
        }
      },
      {
        "type": "safetybox/MsgIssue",
        "value": {
          "safety_box_id": "my_safety_box",
          "from_address": "linkissuetormpp92x9hyzz9wrgf94r6j9h5f06pxxv",
          "to_address": "linkissuetormpp92x9hyzz9wrgf94r6j9h5f06pxxv",
          "coins": [{
                      "denom": "link",
                      "amount": "2"
                    }]
        }
      },
      {
        "type": "safetybox/MsgReturn",
        "value": {
          "safety_box_id": "my_safety_box",
          "returner_address": "linkreturnormpp92x9hyzz9wrgf94r6j9h5f06pxxv",
          "coins": [{
                      "denom": "link",
                      "amount": "1"
                    }]
        }
      },
      {
        "type": "safetybox/MsgRecall",
        "value": {
          "safety_box_id": "my_safety_box",
          "allocator_address": "linkallocatorpp92x9hyzz9wrgf94r6j9h5f06pxxv",
          "coins": [{
                      "denom": "link",
                      "amount": "1"
                    }]
        }
      },
      {
        "type": "safetybox/MsgRevokeReturnerPermission",
        "value": {
          "safety_box_id": "my_safety_box",
          "operator": "linkoperatormpp92x9hyzz9wrgf94r6j9h5f06pxxv",
          "address": "linkreturnormpp92x9hyzz9wrgf94r6j9h5f06pxxv"
        }
      },
      {
        "type": "safetybox/MsgRevokeIssuerPermission",
        "value": {
          "safety_box_id": "my_safety_box",
          "operator": "linkoperatormpp92x9hyzz9wrgf94r6j9h5f06pxxv",
          "address": "linkissuetormpp92x9hyzz9wrgf94r6j9h5f06pxxv"
        }
      },
      {
        "type": "safetybox/MsgRevokeAllocatorPermission",
        "value": {
          "safety_box_id": "my_safety_box",
          "operator": "linkoperatormpp92x9hyzz9wrgf94r6j9h5f06pxxv",
          "address": "linkallocatorpp92x9hyzz9wrgf94r6j9h5f06pxxv"
        }
      },
      {
        "type": "safetybox/MsgRevokeOperatorPermission",
        "value": {
          "safety_box_id": "my_safety_box",
          "safety_box_owner": "link16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv",
          "address": "linkoperatormpp92x9hyzz9wrgf94r6j9h5f06pxxv"
        }
      }
      ]
