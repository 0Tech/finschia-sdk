// Code generated by MockGen. DO NOT EDIT.
// Source: ../link/block/proxy/tendermint_lite_wrapper.go

// Package mock_proxy is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	types "github.com/tendermint/tendermint/types"
)

// MockTendermint is a mock of Tendermint interface
type MockTendermint struct {
	ctrl     *gomock.Controller
	recorder *MockTendermintMockRecorder
}

// MockTendermintMockRecorder is the mock recorder for MockTendermint
type MockTendermintMockRecorder struct {
	mock *MockTendermint
}

// NewMockTendermint creates a new mock instance
func NewMockTendermint(ctrl *gomock.Controller) *MockTendermint {
	mock := &MockTendermint{ctrl: ctrl}
	mock.recorder = &MockTendermintMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTendermint) EXPECT() *MockTendermintMockRecorder {
	return m.recorder
}

// ValidateBlockMeta mocks base method
func (m *MockTendermint) ValidateBlockMeta(meta *types.BlockMeta, sh types.SignedHeader) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateBlockMeta", meta, sh)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateBlockMeta indicates an expected call of ValidateBlockMeta
func (mr *MockTendermintMockRecorder) ValidateBlockMeta(meta, sh interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateBlockMeta", reflect.TypeOf((*MockTendermint)(nil).ValidateBlockMeta), meta, sh)
}

// ValidateBlock mocks base method
func (m *MockTendermint) ValidateBlock(meta *types.Block, sh types.SignedHeader) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateBlock", meta, sh)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateBlock indicates an expected call of ValidateBlock
func (mr *MockTendermintMockRecorder) ValidateBlock(meta, sh interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateBlock", reflect.TypeOf((*MockTendermint)(nil).ValidateBlock), meta, sh)
}
